#heapq를 이용해서 문제를 풀었음 heapq에 대한 공부 필요 
#heapq는 가장 작은 수가 root인것 
import heapq 
def solution(n, k, enemy):
    answer = 0
    invinc = [0]*k #무적권

    for i in range(len(enemy)):
        #invinc[0] 랑 비교하면서 invinc 대체
        if enemy[i] > invinc[0]:
            n -= heapq.heapreplace(invinc,enemy[i])
        else:
            n -= enemy[i]
        if n < 0:
            return i
        elif n == 0:
            return i+1
    return len(enemy) #만약 배열이 다 돌고 나서도 여기로 나온다면 n > 0 이라는 뜻으로 무조건 clear
def solution(n, k, enemy):
    answer = 0
    m=[0 for x in range(k)]
    for i,e in enumerate(enemy):
        if min(m)<e:
            m.pop(m.index(min(m)))
            m.append(e)
            
        if n-e <0 :
            if k>0:
                if n-e+max(m)<=0:
                    return i
                else:
                    n=n-e+m.pop(m.index(max(m)))
                    m.append(0)
                    k-=1
            else:
                return i

        else:
            n-=e
    return len(enemy)