def make_matrix(row,col):
    matrix=[[0 for x in range(col)] for y in range(row)]
    a=1
    for i in range(row):
        for j in range(col):
            matrix[i][j]=a
            a+=1
    
    return matrix
def solution(rows, columns, queries):
    answer = []
    matrix = make_matrix(rows,columns)
    for i,query in enumerate(queries):
        for j,q in enumerate(query):
            q-=1
            queries[i][j]=q
    
    for query in (queries):
        temp1,temp2=0,0 
        for i in range(query[1],query[3]+1):
            if temp1==0:
                temp1=matrix[query[0]][i]
                continue
            temp2=matrix[query[0]][i]
            matrix[query[0]][i]=temp1
            temp1=temp2
        for i in range(query[0]+1,query[2]+1):
            temp2=matrix[i][query[3]]
            matrix[i][query[3]]=temp1
            temp1=temp2
        for i in range(query[3]-1,query[1]-1,-1):
            temp2=matrix[query[2]][i]
            matrix[query[2]][i]=temp1
            temp1=temp2
        for i in range(query[2]-1,query[0]-1,-1):
            temp2=matrix[i][query[1]]
            matrix[i][query[1]]=temp1
            temp1=temp2
        query_min=[]
        query_min=matrix[query[0]][query[1]:query[3]+1]+matrix[query[2]][query[1]:query[3]+1]
        for i in range(query[0],query[2]+1):
            query_min.append(matrix[i][query[1]])
            query_min.append(matrix[i][query[3]])
        answer.append(min(query_min))
        query_min.clear()

    return answer

#deque를 통해서 세련되게 푼사람도 있음

from collections import deque
def solution(rows, columns, queries):
    arr = [[i+columns*j for i in range(1,columns+1)] for j in range(rows)]
    answer, result = deque(), []
    for i in queries:
        a,b,c,d = i[0]-1,i[1]-1,i[2]-1,i[3]-1
        for x in range(d-b):
            answer.append(arr[a][b+x])
        for y in range(c-a):
            answer.append(arr[a+y][d])
        for z in range(d-b):
            answer.append(arr[c][d-z])
        for k in range(c-a):
            answer.append(arr[c-k][b])
        answer.rotate(1)
        result.append(min(answer))
        for x in range(d-b):
            arr[a][b+x] = answer.popleft()
        for y in range(c-a):
            arr[a+y][d] = answer.popleft()
        for z in range(d-b):
            arr[c][d-z] = answer.popleft()
        for k in range(c-a):
            arr[c-k][b] = answer.popleft()
    return result