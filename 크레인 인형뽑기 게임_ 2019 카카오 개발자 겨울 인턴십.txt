#리스트 이용해서 잘 풀었음 여기서 알게된점 deque를 사용하는 이유는 pop(0)하면 시간복잡도가 n만큼 드는데 그걸 줄이려고
#즉 pop()은 시간복잡도 1 그리고 pop은 가장 마지막꺼를 뺴는거임
def solution(board, moves):
    answer = 0
    basket=[]

    for move in moves:
        for i in range(len(board)):
            if(board[i][move-1]==0):
                continue
            else:
                if len(basket)==0:
                    basket.append(board[i][move-1])
                else:
                    if basket[-1]==board[i][move-1]:
                        answer+=2
                        basket.pop()
                    else:
                        basket.append(board[i][move-1])
                board[i][move-1]=0
                break
    return answer